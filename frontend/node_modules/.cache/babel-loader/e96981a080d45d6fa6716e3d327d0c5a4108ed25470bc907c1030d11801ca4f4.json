{"ast":null,"code":"var _jsxFileName = \"D:\\\\Experiments\\\\WebD\\\\Portfolio-Tracker\\\\frontend\\\\src\\\\context\\\\StocksProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StocksContext = /*#__PURE__*/createContext();\nexport const useStocks = () => {\n  _s();\n  return useContext(StocksContext);\n};\n_s(useStocks, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst StocksProvider = ({\n  children\n}) => {\n  _s2();\n  const [stocks, setStocks] = useState([]);\n\n  // fetching the stocks from database via backend\n  const fetchStocks = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/stocks\");\n      console.log(\"Fetched stocks:\", response.data);\n      const stocksData = response.data;\n      const updatedStocks = await Promise.all(stocksData.map(async stock => {\n        const stockPriceData = await fetchStockPrice(stock.symbol);\n        const currentPrice = stockPriceData ? stockPriceData.currentPrice : stock.currentPrice;\n        const profitLoss = currentPrice ? ((currentPrice - stock.buyPrice) * stock.qty).toFixed(2) : stock.profitLoss;\n        return {\n          ...stock,\n          currentPrice,\n          profitLoss\n        };\n      }));\n      setStocks(updatedStocks);\n    } catch (error) {\n      console.error(\"Error fetching stocks:\", error.message);\n    }\n  };\n\n  // fetching the stock price from api\n  const fetchStockPrice = async symbol => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/stocks-price/${symbol}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching price for ${symbol}:`, error.message);\n      return null;\n    }\n  };\n\n  // adding new stock to the database\n  const addStock = async newStock => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/stocks\", newStock);\n      setStocks(prevStocks => [...prevStocks, response.data]);\n    } catch (error) {\n      console.error(\"Error adding stock:\", error.message);\n    }\n  };\n\n  // deleting a stock\n  const deleteStock = async symbol => {\n    try {\n      await axios.delete(`http://localhost:5000/api/stocks/${symbol}`);\n      setStocks(prevStocks => prevStocks.filter(stock => stock.symbol !== symbol));\n    } catch (error) {\n      console.error(\"Error deleting stock:\", error.message);\n    }\n  };\n\n  // editing a stock\n  const editStock = async updatedStock => {\n    try {\n      const response = await axios.put(`http://localhost:5000/api/stocks/${updatedStock.symbol}`, updatedStock);\n      setStocks(prevStocks => prevStocks.map(stock => stock.symbol === updatedStock.symbol ? response.data : stock));\n    } catch (error) {\n      console.error(\"Error editing stock:\", error.message);\n    }\n  };\n\n  // fetching stocks on initial load\n  useEffect(() => {\n    fetchStocks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StocksContext.Provider, {\n    value: {\n      stocks,\n      addStock,\n      deleteStock,\n      editStock\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s2(StocksProvider, \"ckkB5iKANHozGm/BUdCimNAdz7k=\");\n_c = StocksProvider;\nexport default StocksProvider;\n\n// i have to upload the data in server\n// retrieve the data from database and then display\nvar _c;\n$RefreshReg$(_c, \"StocksProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","jsxDEV","_jsxDEV","StocksContext","useStocks","_s","StocksProvider","children","_s2","stocks","setStocks","fetchStocks","response","get","console","log","data","stocksData","updatedStocks","Promise","all","map","stock","stockPriceData","fetchStockPrice","symbol","currentPrice","profitLoss","buyPrice","qty","toFixed","error","message","addStock","newStock","post","prevStocks","deleteStock","delete","filter","editStock","updatedStock","put","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Experiments/WebD/Portfolio-Tracker/frontend/src/context/StocksProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst StocksContext = createContext();\r\n\r\nexport const useStocks = () => {\r\n    return useContext(StocksContext);\r\n};\r\n\r\nconst StocksProvider = ({ children }) => {\r\n    const [stocks, setStocks] = useState([]);\r\n\r\n    // fetching the stocks from database via backend\r\n    const fetchStocks = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/api/stocks\");\r\n            console.log(\"Fetched stocks:\", response.data); \r\n            const stocksData = response.data;\r\n\r\n            const updatedStocks = await Promise.all(\r\n                stocksData.map(async (stock) => {\r\n                    const stockPriceData = await fetchStockPrice(stock.symbol);\r\n                    const currentPrice = stockPriceData ? stockPriceData.currentPrice : stock.currentPrice;\r\n                    const profitLoss = currentPrice\r\n                        ? ((currentPrice - stock.buyPrice) * stock.qty).toFixed(2)\r\n                        : stock.profitLoss;\r\n\r\n                    return { ...stock, currentPrice, profitLoss };\r\n                })\r\n            );\r\n\r\n            setStocks(updatedStocks);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stocks:\", error.message);      \r\n        }\r\n    };\r\n\r\n    // fetching the stock price from api\r\n    const fetchStockPrice = async (symbol) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/stocks-price/${symbol}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(`Error fetching price for ${symbol}:`, error.message);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // adding new stock to the database\r\n    const addStock = async (newStock) => {\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/api/stocks\", newStock);\r\n            setStocks((prevStocks) => [...prevStocks, response.data]);\r\n        } catch (error) {\r\n            console.error(\"Error adding stock:\", error.message);\r\n        }\r\n    };\r\n\r\n    // deleting a stock\r\n    const deleteStock = async (symbol) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/stocks/${symbol}`);\r\n            setStocks((prevStocks) => prevStocks.filter((stock) => stock.symbol !== symbol));\r\n        } catch (error) {\r\n            console.error(\"Error deleting stock:\", error.message);\r\n        }\r\n    }\r\n\r\n    // editing a stock\r\n    const editStock = async (updatedStock) => {\r\n        try {\r\n            const response = await axios.put(`http://localhost:5000/api/stocks/${updatedStock.symbol}`, updatedStock);\r\n            setStocks((prevStocks) =>\r\n                prevStocks.map((stock) =>\r\n                    stock.symbol === updatedStock.symbol ? response.data : stock\r\n                )\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Error editing stock:\", error.message);\r\n        }\r\n    }\r\n\r\n    // fetching stocks on initial load\r\n    useEffect(() => {\r\n        fetchStocks();\r\n    }, []);\r\n\r\n    return (\r\n        <StocksContext.Provider value={{stocks, addStock, deleteStock, editStock}}>\r\n            {children}\r\n        </StocksContext.Provider>\r\n\r\n    );\r\n}\r\n\r\nexport default StocksProvider;\r\n\r\n\r\n// i have to upload the data in server\r\n// retrieve the data from database and then display\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,gBAAGP,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMQ,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOR,UAAU,CAACM,aAAa,CAAC;AACpC,CAAC;AAACE,EAAA,CAFWD,SAAS;AAItB,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,kCAAkC,CAAC;MACpEC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC7C,MAAMC,UAAU,GAAGL,QAAQ,CAACI,IAAI;MAEhC,MAAME,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CACnCH,UAAU,CAACI,GAAG,CAAC,MAAOC,KAAK,IAAK;QAC5B,MAAMC,cAAc,GAAG,MAAMC,eAAe,CAACF,KAAK,CAACG,MAAM,CAAC;QAC1D,MAAMC,YAAY,GAAGH,cAAc,GAAGA,cAAc,CAACG,YAAY,GAAGJ,KAAK,CAACI,YAAY;QACtF,MAAMC,UAAU,GAAGD,YAAY,GACzB,CAAC,CAACA,YAAY,GAAGJ,KAAK,CAACM,QAAQ,IAAIN,KAAK,CAACO,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,GACxDR,KAAK,CAACK,UAAU;QAEtB,OAAO;UAAE,GAAGL,KAAK;UAAEI,YAAY;UAAEC;QAAW,CAAC;MACjD,CAAC,CACL,CAAC;MAEDjB,SAAS,CAACQ,aAAa,CAAC;IAC5B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC1D;EACJ,CAAC;;EAED;EACA,MAAMR,eAAe,GAAG,MAAOC,MAAM,IAAK;IACtC,IAAI;MACA,MAAMb,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,0CAA0CY,MAAM,EAAE,CAAC;MACpF,OAAOb,QAAQ,CAACI,IAAI;IACxB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAAC,4BAA4BN,MAAM,GAAG,EAAEM,KAAK,CAACC,OAAO,CAAC;MACnE,OAAO,IAAI;IACf;EACJ,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACjC,IAAI;MACA,MAAMtB,QAAQ,GAAG,MAAMZ,KAAK,CAACmC,IAAI,CAAC,kCAAkC,EAAED,QAAQ,CAAC;MAC/ExB,SAAS,CAAE0B,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAExB,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACvD;EACJ,CAAC;;EAED;EACA,MAAMK,WAAW,GAAG,MAAOZ,MAAM,IAAK;IAClC,IAAI;MACA,MAAMzB,KAAK,CAACsC,MAAM,CAAC,oCAAoCb,MAAM,EAAE,CAAC;MAChEf,SAAS,CAAE0B,UAAU,IAAKA,UAAU,CAACG,MAAM,CAAEjB,KAAK,IAAKA,KAAK,CAACG,MAAM,KAAKA,MAAM,CAAC,CAAC;IACpF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACzD;EACJ,CAAC;;EAED;EACA,MAAMQ,SAAS,GAAG,MAAOC,YAAY,IAAK;IACtC,IAAI;MACA,MAAM7B,QAAQ,GAAG,MAAMZ,KAAK,CAAC0C,GAAG,CAAC,oCAAoCD,YAAY,CAAChB,MAAM,EAAE,EAAEgB,YAAY,CAAC;MACzG/B,SAAS,CAAE0B,UAAU,IACjBA,UAAU,CAACf,GAAG,CAAEC,KAAK,IACjBA,KAAK,CAACG,MAAM,KAAKgB,YAAY,CAAChB,MAAM,GAAGb,QAAQ,CAACI,IAAI,GAAGM,KAC3D,CACJ,CAAC;IACL,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACxD;EACJ,CAAC;;EAED;EACAlC,SAAS,CAAC,MAAM;IACZa,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,aAAa,CAACwC,QAAQ;IAACC,KAAK,EAAE;MAACnC,MAAM;MAAEwB,QAAQ;MAAEI,WAAW;MAAEG;IAAS,CAAE;IAAAjC,QAAA,EACrEA;EAAQ;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAGjC,CAAC;AAAAxC,GAAA,CApFKF,cAAc;AAAA2C,EAAA,GAAd3C,cAAc;AAsFpB,eAAeA,cAAc;;AAG7B;AACA;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}