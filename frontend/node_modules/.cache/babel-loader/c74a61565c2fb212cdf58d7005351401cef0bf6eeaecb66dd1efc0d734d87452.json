{"ast":null,"code":"var _jsxFileName = \"D:\\\\Experiments\\\\WebD\\\\Portfolio-Tracker\\\\frontend\\\\src\\\\context\\\\StocksProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StocksContext = /*#__PURE__*/createContext();\nexport const useStocks = () => {\n  _s();\n  return useContext(StocksContext);\n};\n_s(useStocks, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst StocksProvider = ({\n  children\n}) => {\n  _s2();\n  const [stocks, setStocks] = useState([{\n    symbol: 'TSLA',\n    name: 'Tesla Inc',\n    qty: 10,\n    profitLoss: 1000,\n    currentPrice: null\n  }, {\n    symbol: 'AAPL',\n    name: 'Apple Inc',\n    qty: 15,\n    profitLoss: 1200,\n    currentPrice: null\n  }]);\n  const fetchStockPrice = async symbol => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/stock-price/${symbol}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching price for ${symbol}:`, error.message);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const updatedStockPrices = async () => {\n      const updatedStocks = await Promise.all(stocks.map(async stock => {\n        const stockPriceData = await fetchStockPrice(stock.symbol);\n        return {\n          ...stock,\n          currentPrice: stockPriceData ? stockPriceData.currentPrice : stock.currentPrice\n        };\n      }));\n      setStocks(updatedStocks);\n    };\n    updatedStockPrices();\n  }, []);\n  const addStock = newStock => {\n    setStocks(prevStocks => [...prevStocks, newStock]);\n  };\n  const deleteStock = symbol => {\n    setStocks(prevStocks => prevStocks.filter(stock => stock.symbol !== symbol));\n  };\n  const editStock = updatedStock => {\n    setStocks(prevStocks => prevStocks.map(stock => stock.symbol === updatedStock.symbol ? updatedStock : stock));\n  };\n  return /*#__PURE__*/_jsxDEV(StocksContext.Provider, {\n    value: {\n      stocks,\n      addStock,\n      deleteStock,\n      editStock\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s2(StocksProvider, \"4Gn2N/IdYDoKmZCbDhCjjOMhSo4=\");\n_c = StocksProvider;\nexport default StocksProvider;\nvar _c;\n$RefreshReg$(_c, \"StocksProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","StocksContext","useStocks","_s","StocksProvider","children","_s2","stocks","setStocks","symbol","name","qty","profitLoss","currentPrice","fetchStockPrice","response","axios","get","data","error","console","message","updatedStockPrices","updatedStocks","Promise","all","map","stock","stockPriceData","addStock","newStock","prevStocks","deleteStock","filter","editStock","updatedStock","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Experiments/WebD/Portfolio-Tracker/frontend/src/context/StocksProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst StocksContext = createContext();\r\n\r\nexport const useStocks = () => {\r\n    return useContext(StocksContext);\r\n};\r\n\r\nconst StocksProvider = ({ children }) => {\r\n    const [stocks, setStocks] = useState([\r\n        {\r\n            symbol: 'TSLA',\r\n            name: 'Tesla Inc',\r\n            qty: 10,\r\n            profitLoss: 1000,\r\n            currentPrice: null,\r\n        },\r\n        {\r\n            symbol: 'AAPL',\r\n            name: 'Apple Inc',\r\n            qty: 15,\r\n            profitLoss: 1200,\r\n            currentPrice: null,\r\n        },\r\n    ]);\r\n\r\n    const fetchStockPrice = async (symbol) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/stock-price/${symbol}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(`Error fetching price for ${symbol}:`, error.message);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const updatedStockPrices = async () => {\r\n            const updatedStocks = await Promise.all(\r\n                stocks.map(async (stock) => {\r\n                    const stockPriceData = await fetchStockPrice(stock.symbol);\r\n                    return {\r\n                        ...stock,\r\n                        currentPrice: stockPriceData ? stockPriceData.currentPrice : stock.currentPrice,\r\n                    };\r\n                })\r\n            );\r\n            setStocks(updatedStocks);\r\n        };\r\n\r\n        updatedStockPrices();\r\n    },[]);\r\n\r\n    const addStock = (newStock) => {\r\n        setStocks((prevStocks) => [...prevStocks, newStock]);\r\n    };\r\n\r\n    const deleteStock = (symbol) => {\r\n        setStocks((prevStocks) => prevStocks.filter((stock) => stock.symbol !== symbol));\r\n    };\r\n\r\n    const editStock = (updatedStock) => {\r\n        setStocks((prevStocks) =>\r\n            prevStocks.map((stock) =>\r\n                stock.symbol === updatedStock.symbol ? updatedStock : stock\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <StocksContext.Provider value={{stocks, addStock, deleteStock, editStock}}>\r\n            {children}\r\n        </StocksContext.Provider>\r\n\r\n    );\r\n}\r\n\r\nexport default StocksProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}